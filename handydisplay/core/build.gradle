plugins {
    id 'application'
    id 'distribution'
    alias(handylibs.plugins.hidetake.ssh)
    alias(handylibs.plugins.kotlin.serialization)
}

dependencies {
    implementation handylibs.picocli
    implementation handylibs.classgraph
}

application {
    mainClassName = 'me.genel.handydisplay.core.MainKt'
}

distributions {
    full_zip_archive {
        distributionBaseName = 'handy_display_zip'
        distributionClassifier = 'classifer'
        contents {
            from 'src/main'
        }
    }
}

remotes {
    atompi {
        host = ATOMPI_HOST
        user = ATOMPI_USER
        password = ATOMPI_PASS
    }
}

task __zipSSHDeploy {
    println("SSH Deploy >> Deploying to: ${ATOMPI_HOST}")
    doLast {
        ssh.run {
            session(remotes.atompi) {
                def zipName = "HandyDisplayKotlin-${version}"
                def zipFile = project.file("build/distributions/${zipName}.zip")
                println("SSH Deploy >> Transferring ${zipFile} to remote...")

                println("SSH Deploy >> Preparing remote directory: ${ATOMPI_PATH}")
                execute "mkdir -p ${ATOMPI_PATH}/archives"

                println('SSH Deploy >> Uploading...')
                put from: zipFile, into: "${ATOMPI_PATH}/archives/${zipName}.zip"

                println("SSH Deploy >> Moving into ${ATOMPI_PATH}")
                execute "cd ${ATOMPI_PATH}"

                println("SSH Deploy >> Unzipping ${zipName}")
                execute "sudo unzip -o ${ATOMPI_PATH}/archives/${zipName}.zip -d ${ATOMPI_PATH}/tmp"
                execute "cp -R ${ATOMPI_PATH}/tmp/${zipName}/* ${ATOMPI_PATH}"
                execute "sudo rm -r ${ATOMPI_PATH}/tmp"

                def deployFile = project.file("deploy/")
                println("SSH Deploy >> Transferring scripts from ${deployFile}")
                put from: deployFile.getAbsolutePath(), into: "${ATOMPI_PATH}"
            }
        }
    }
}